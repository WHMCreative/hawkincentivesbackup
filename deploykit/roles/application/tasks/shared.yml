---

- name: get latest application repo
  git:
    dest={{ sites_directory }}/{{ site_name }}/application/shared/repository
    depth=1
    version={{ git_branch }}
    accept_hostkey=yes
    force=yes
    recursive=no
    repo=ssh://git@github.com/{{ git_org }}/{{ git_repo }}.git
  tags:
    - setup
    - deploy
  notify:
    - apply directory permissions inside repository
    - apply files permissions inside repository

- name: provision settings file
  become: yes
  become_method: sudo
  command: cp {{ sites_directory }}/{{ site_name }}/application/shared/repository/{{ drupal_root }}/sites/{{ item.name }}/{{ settings_file | default('settings.php') }} {{ sites_directory }}/{{ site_name }}/application/shared/{{ item.name }}/settings.php
  with_items: "{{ site_roots }}"
  tags:
    - setup
    - settings

- name: set settings file permissions
  become: yes
  become_method: sudo
  file:
    path={{ sites_directory }}/{{ site_name }}/application/shared/{{ item.name }}/settings.php
    owner={{ file_owner }}
    group={{ file_group }}
    mode=0440
    state=file
  with_items: "{{ site_roots }}"
  tags:
    - setup
    - settings
    - sudo
    - permissions

- name: apply files directory permissions
  become: yes
  become_method: sudo
  file:
    path={{ sites_directory }}/{{ site_name }}/application/shared/{{ item.name }}/files
    owner={{ file_owner }}
    group={{ file_group }}
    mode=0770
    state=directory
    recurse=yes
  with_items: "{{ site_roots }}"
  tags:
    - setup
    - sudo
    - permissions

- name: apply files permissions inside files directory
  become: yes
  become_method: sudo
  command: find . -type f -exec chmod 660 '{}' \+
  args:
    chdir: "{{ sites_directory }}/{{ site_name }}/application/shared/{{ item.name }}/files"
  with_items: "{{ site_roots }}"
  tags:
    - setup
    - sudo
    - permissions

- name: apply directory permissions inside files directory
  become: yes
  become_method: sudo
  command: find . -type d -exec chmod 770 '{}' \+
  args:
    chdir: "{{ sites_directory }}/{{ site_name }}/application/shared/{{ item.name }}/files"
  with_items: "{{ site_roots }}"
  tags:
    - setup
    - sudo
    - permissions

- name: apply ownership inside files directory
  become: yes
  become_method: sudo
  command: find . -exec chown {{ file_owner }}:{{ file_group }} '{}' \+
  args:
    chdir: "{{ sites_directory }}/{{ site_name }}/application/shared/{{ item.name }}/files"
  with_items: "{{ site_roots }}"
  tags:
    - setup
    - sudo
    - permissions

- name: create new release dir
  file:
    path={{ sites_directory }}/{{ site_name }}/application/releases/{{ timestamp.stdout }}
    state=directory
  tags:
    - deploy
    - release

- name: create latest release
  command: cp -ra {{ sites_directory }}/{{ site_name }}/application/shared/repository/{{ drupal_root }} {{ sites_directory }}/{{ site_name }}/application/releases/{{ timestamp.stdout }}/{{ drupal_root }}
  tags:
    - deploy
    - release

- name: overwrite vendor directory
  command: cp -ra {{ sites_directory }}/{{ site_name }}/application/shared/repository/vendor {{ sites_directory }}/{{ site_name }}/application/releases/{{ timestamp.stdout }}/vendor
  tags:
    - deploy
    - release

- name: overwrite config directory
  command: cp -ra {{ sites_directory }}/{{ site_name }}/application/shared/repository/config {{ sites_directory }}/{{ site_name }}/application/releases/{{ timestamp.stdout }}/config
  tags:
    - deploy
    - release

- name: apply ownership inside project
  become: yes
  become_method: sudo
  command: find . -exec chown {{ file_owner }}:{{ file_group }} '{}' \+
  args:
    chdir: "{{ sites_directory }}/{{ site_name }}/application/releases/{{ timestamp.stdout }}"
  tags:
    - deploy
    - release
    - sudo
    - permissions

- name: remove default directory
  file:
    path={{ sites_directory }}/{{ site_name }}/application/releases/{{ timestamp.stdout }}/{{ drupal_root }}/sites/{{ item.name }}
    state=absent
  with_items: "{{ site_roots }}"
  tags:
    - deploy
    - release
  
- name: symlink default directory
  file:
    path={{ sites_directory }}/{{ site_name }}/application/releases/{{ timestamp.stdout }}/{{ drupal_root }}/sites/{{ item.name }}
    src={{ sites_directory }}/{{ site_name }}/application/shared/{{ item.name }}
    force=yes
    state=link
  with_items: "{{ site_roots }}"
  tags:
    - deploy
    - release
